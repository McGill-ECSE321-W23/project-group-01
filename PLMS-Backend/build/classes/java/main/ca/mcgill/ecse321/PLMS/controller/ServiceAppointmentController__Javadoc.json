{"doc":" Controller class related to endpoints for CRUD operations on the service appointments model class in the context of the PLMS system\n","fields":[],"enumConstants":[],"methods":[{"name":"getAllServiceAppointments","paramTypes":[],"doc":" Gets all upcoming and previously booked service appointments\n \n @return All service appointments\n"},{"name":"getServiceAppointmentById","paramTypes":["int"],"doc":" Gets a service appointment by id\n \n @param id The id of the service appointement to look up.\n @return The service appointement with the given id.\n"},{"name":"getAllServiceAppointmentsByDate","paramTypes":["java.time.LocalDate"],"doc":" Gets all the service appointments scheduled on a date\n \n @param date The date at which you want the find all the ServiceAppointments form: YYYY-MM-DD\n @return The service appointments at the specified date.\n"},{"name":"getServiceAppointmentByEmployee","paramTypes":["java.lang.String"],"doc":" Get all the service appointments assigned to an employee based on their account's email\n  \n @param email The email of the employee you want to check for\n @return The service appointments related to the employee\n"},{"name":"getServiceAppointmentByCustomer","paramTypes":["java.lang.String"],"doc":" Gets all the service appointments ever booked by a monthly customer\n \n @param email The email of the customer you want to check for\n @return The service appointments related to the customer\n"},{"name":"createServiceAppointment","paramTypes":["ca.mcgill.ecse321.PLMS.dto.ServiceAppointmentRequestDto"],"doc":" Creates a new service appointment with the desired service, date, start time and end time\n \n @param serviceAppointmentRequestDto Contains <b>service name</b> (String), <b>date</b> (Date format: YYYY-MM-DD), <b>start time</b> (Time format: HH:mm:ss) and an optional <b>user email</b> (String)\n @return The service appointment object created\n"},{"name":"updateServiceAppointment","paramTypes":["int","ca.mcgill.ecse321.PLMS.dto.ServiceAppointmentRequestDto"],"doc":" Creates a new service appointment with the desired service, date, start time and end time\n \n @param id Id of the the service appointment\n @param serviceAppointmentRequestDto Contains service name (String), date (Date format: YYYY-MM-DD), start time (Time format: HH:mm:ss) and an optional user email (String)\n @return The service appointment object created\n"},{"name":"updateEmployeeEmailServiceAppointment","paramTypes":["int","java.lang.String"],"doc":" Update the employee associated with a service appointment\n \n @param id Id of the service appointment - this is a pathVariable\n @param employeeEmail The new employee email of the service appointment\n @return The updated service appointment\n"},{"name":"deleteServiceAppointment","paramTypes":["int"],"doc":" Deletes a service appointment based on id\n \n @param id Id of the service appointment that will be deleted\n"}],"constructors":[]}